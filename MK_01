# -*- coding: utf-8 -*-
"""
Created on Tue Nov  9 09:55:11 2021

Snake!
"""

import turtle
import random

#constants
WIDTH = 500
HEIGHT = 500
DELAY = 200
FOOD_SIZE = 20

offsets = {
    "up": (0, 20),
    "down": (0, -20),
    "left": (-20, 0),
    "right": (20, 0)
}

#arrowed

def go_up():
    global snake_direction
    if snake_direction != "down":
        snake_direction = "up"

def go_down():
    global snake_direction
    if snake_direction != "up":
        snake_direction = "down"
        
def go_left():
    global snake_direction
    if snake_direction != "right":
        snake_direction = "left"
        
def go_right():
    global snake_direction
    if snake_direction != "left":
        snake_direction = "right"
    
#snake shuffle
def move_it():
    stamped.clearstamps()
    
    new_head = snake[-1].copy()
    new_head[0] += offsets[snake_direction][0]
    new_head[1] += offsets[snake_direction][1]
    
    #collision check
    if new_head in snake or new_head[0] < -WIDTH / 2 or new_head[0] > WIDTH / 2 or new_head[1] < -HEIGHT / 2 or new_head[1] > HEIGHT / 2:
        reset()
    else:
    
        snake.append(new_head)
        
        #food?
        if not munch():
            snake.pop(0)
            
        
        for segment in snake:
            stamped.goto(segment[0], segment[1])
            stamped.stamp()
        
        screen.title(f"Snakey {score}")
        screen.update()
        
        turtle.ontimer(move_it, DELAY)

def munch():
    global food_pos, score, DELAY
    if get_distance(snake[-1], food_pos) < 20:
        score += 1
        food_pos = get_food()
        food.goto(food_pos)
        DELAY += - 25 
        return True
    return False

def get_food():
    x = random.randint(- WIDTH / 2 + FOOD_SIZE, WIDTH / 2 - FOOD_SIZE)
    y = random.randint(- HEIGHT / 2 + FOOD_SIZE, HEIGHT / 2 - FOOD_SIZE)
    return (x, y)

def get_distance(pos1, pos2):
    x1, y1 = pos1
    x2, y2 = pos2
    distance = ((y2 - y1) ** 2 + (x2 - x1) ** 2) ** 0.5
    return distance

def reset():
    global score, food_pos, snake, snake_direction, DELAY
    snake = [[0, 0], [20, 0], [40, 0], [60, 0]]
    snake_direction = "up"
    score = 0
    food_pos = get_food()
    food.goto(food_pos)
    move_it()
    DELAY = 200

#screen
screen = turtle.Screen()
screen.setup(WIDTH, HEIGHT)
screen.bgcolor("navy")
screen.tracer(0)

#inputs
screen.listen()
screen.onkey(go_up, "Up")
screen.onkey(go_down, "Down")
screen.onkey(go_left, "Left")
screen.onkey(go_right, "Right")
screen.onkey(turtle.bye, "Escape")


#create snake
stamped = turtle.Turtle()
stamped.shape("square")
stamped.color("red")
stamped.shapesize(18/20)
stamped.penup()

#create food
food = turtle.Turtle()
food.shape("circle")
food.color("white")
food.shapesize(10/20)
food.penup()



#get the party started
reset()
   

turtle.done()
